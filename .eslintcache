[{"F:\\Projects\\vidly\\src\\App.js":"1","F:\\Projects\\vidly\\src\\services\\fakeMovieService.js":"2","F:\\Projects\\vidly\\src\\index.js":"3","F:\\Projects\\vidly\\src\\components\\MoviesF.jsx":"4","F:\\Projects\\vidly\\src\\reportWebVitals.js":"5","F:\\Projects\\vidly\\src\\services\\fakeGenreService.js":"6","F:\\Projects\\vidly\\src\\components\\movies.jsx":"7","F:\\Projects\\vidly\\src\\components\\common\\listGroup.jsx":"8","F:\\Projects\\vidly\\src\\components\\moviesTable.jsx":"9","F:\\Projects\\vidly\\src\\components\\common\\pagination.jsx":"10","F:\\Projects\\vidly\\src\\utils\\paginate.js":"11","F:\\Projects\\vidly\\src\\components\\common\\tableHeader.jsx":"12"},{"size":256,"mtime":1611220205567,"results":"13","hashOfConfig":"14"},{"size":2479,"mtime":1530867770000,"results":"15","hashOfConfig":"14"},{"size":587,"mtime":1611186706520,"results":"16","hashOfConfig":"14"},{"size":4009,"mtime":1611219549670,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1611153456978,"results":"18","hashOfConfig":"14"},{"size":258,"mtime":1530265620000,"results":"19","hashOfConfig":"14"},{"size":3695,"mtime":1611223377828,"results":"20","hashOfConfig":"14"},{"size":688,"mtime":1611219713002,"results":"21","hashOfConfig":"14"},{"size":1093,"mtime":1611220623319,"results":"22","hashOfConfig":"14"},{"size":1330,"mtime":1611219737250,"results":"23","hashOfConfig":"14"},{"size":217,"mtime":1611216758295,"results":"24","hashOfConfig":"14"},{"size":1473,"mtime":1611219937208,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15klzdd",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Projects\\vidly\\src\\App.js",["52","53"],"F:\\Projects\\vidly\\src\\services\\fakeMovieService.js",[],"F:\\Projects\\vidly\\src\\index.js",[],["54","55"],"F:\\Projects\\vidly\\src\\components\\MoviesF.jsx",["56","57","58","59","60","61","62"],"import React, { useState, useEffect } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\n\r\nfunction MoviesF() {\r\n  const [mainMovies, setMovies] = useState([]);\r\n  const [mainGenres, setGenres] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(4);\r\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\r\n\r\n  // Initialize state\r\n  useEffect(() => {\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n    setMovies(getMovies());\r\n    setGenres(genres);\r\n  },[]);\r\n\r\n  // delete a certain movie\r\n  function handleDelete(movie) {\r\n    setMovies((prevMovie) => {\r\n      return prevMovie.filter((m) => m._id !== movie._id);\r\n    });\r\n  }\r\n  // To like or unlike\r\n  function handleLike(movie) {\r\n    console.log(\"like\");\r\n    const movies = [...mainMovies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    setMovies(movies);\r\n  }\r\n\r\n  // When pagination button is pressed, state will be changed\r\n  const handlePageChange = page => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  // To handle genre change from list group\r\n  const handleGenreSelect = genre => {\r\n    setSelectedGenre(genre);\r\n  };\r\n\r\n  // Sorting\r\n  const handleSort = sortColumn => {\r\n    setSortColumn(sortColumn);\r\n  };\r\n\r\n  // This function is used to get the data of the page\r\n  const getPagedData = () => {\r\n    // Get data from the state to avoid using the state directly\r\n    // const {\r\n    //   pageSize,\r\n    //   currentPage,\r\n    //   sortColumn,\r\n    //   selectedGenre,\r\n    //   movies: allMovies\r\n    // } = this.state;\r\n\r\n    // filter the movies by genre\r\n    const filtered =\r\n      selectedGenre && selectedGenre._id\r\n        ? mainMovies.filter(m => m.genre._id === selectedGenre._id)\r\n        : mainMovies;\r\n\r\n    // sort the movies according to the option available in the state\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    // paginate the movies according to the option available in the state\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    // return movies and their movies\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  const count = mainMovies.length;\r\n\r\n  if (count === 0) {\r\n    return <p>There are no movies in the database.</p>;\r\n  } else {\r\n    \r\n    // Get the movies form getPagedData function which returns filtered, sorted and paginated movies\r\n    const { totalCount, data: movies } = getPagedData();\r\n    return (\r\n      <React.Fragment>\r\n        <p>Showing {count} movies in the database.</p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Title</th>\r\n              <th>Genre</th>\r\n              <th>Stock</th>\r\n              <th>Rate</th>\r\n              <th />\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {mainMovies.map((movie) => (\r\n              <tr key={movie._id}>\r\n                <td>{movie.title}</td>\r\n                <td>{movie.genre.name}</td>\r\n                <td>{movie.numberInStock}</td>\r\n                <td>{movie.dailyRentalRate}</td>\r\n                <td>\r\n                  <Like liked={movie.liked} onClick={() => handleLike(movie)} />\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => handleDelete(movie)}\r\n                    className=\"btn btn-danger btn-sm\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesF;\r\n","F:\\Projects\\vidly\\src\\reportWebVitals.js",[],"F:\\Projects\\vidly\\src\\services\\fakeGenreService.js",[],"F:\\Projects\\vidly\\src\\components\\movies.jsx",[],"F:\\Projects\\vidly\\src\\components\\common\\listGroup.jsx",[],"F:\\Projects\\vidly\\src\\components\\moviesTable.jsx",[],"F:\\Projects\\vidly\\src\\components\\common\\pagination.jsx",["63"],"F:\\Projects\\vidly\\src\\utils\\paginate.js",[],"F:\\Projects\\vidly\\src\\components\\common\\tableHeader.jsx",[],{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":15},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"64","severity":1,"message":"73","line":10,"column":10,"nodeType":"66","messageId":"67","endLine":10,"endColumn":20},{"ruleId":"64","severity":1,"message":"74","line":13,"column":20,"nodeType":"66","messageId":"67","endLine":13,"endColumn":31},{"ruleId":"64","severity":1,"message":"75","line":40,"column":9,"nodeType":"66","messageId":"67","endLine":40,"endColumn":25},{"ruleId":"64","severity":1,"message":"76","line":45,"column":9,"nodeType":"66","messageId":"67","endLine":45,"endColumn":26},{"ruleId":"64","severity":1,"message":"77","line":50,"column":9,"nodeType":"66","messageId":"67","endLine":50,"endColumn":19},{"ruleId":"64","severity":1,"message":"78","line":88,"column":13,"nodeType":"66","messageId":"67","endLine":88,"endColumn":23},{"ruleId":"64","severity":1,"message":"79","line":88,"column":31,"nodeType":"66","messageId":"67","endLine":88,"endColumn":37},{"ruleId":"80","severity":1,"message":"81","line":28,"column":13,"nodeType":"82","endLine":28,"endColumn":73},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'MoviesF' is defined but never used.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'mainGenres' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'handlePageChange' is assigned a value but never used.","'handleGenreSelect' is assigned a value but never used.","'handleSort' is assigned a value but never used.","'totalCount' is assigned a value but never used.","'movies' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]